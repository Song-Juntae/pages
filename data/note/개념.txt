// 저도 잘 몰라요 ㅠㅠ. 이렇게 막 개념을 던져도 비전공자의 노력이라고 이해해 주세요.
{
    "수학": 
    [
        {
            "Mathematical_object" : "수학에서 추상적인 개념. 정의 될 수 있는 그 모든 것",

            "원소" : "집합에 포함된 서로 다른 'Mathematical_object'",

            "집합": "명확한 기준에 따라 공통 성질을 가지며 중복되지 않는 '원소의 모임'",

            "행렬": "하나 이상의 '원소를' 1차원 또는 2차원의 형태로 나열한 배열",

            "관계": "집합 A, B가 있을 때, 집합 A에서 집합 B로 가는 관계",

            "함수": "집합 A에서 집합 B로 가는 관계가 성립할 때, 집합 A의 원소 a에 대하여 집합 B의 원소 b 하나가 '대응되는 관계'",

            "그래프": "공집합이 아닌 노드의 집합과 서로 다른 노드를 연결하는 엣지 집합으로 이루어진 구조",
                
            "가중치그래프": "그래프에서 각 변에 가중치가 부여된 그래프",
                
            "가중치": "예를 들어 지도에서 두 지점의 연결하는 도로에서 교통량 혹은 통신량이 가중치의 의미를 갖는다",

            "트리": "루트라는 특별한 노드에서 시작하는 그래프",

            "네트워크": "현실세계를 설명하는 그래프",

            "변수": "Mathematical_object을 부르는 이름",

            "활성화 함수": "다음 노드로 변환하는 함수",

            "손실 함수": "하나 이상의 변수 값을 이벤트(예측)의 직관적인 손실값(실수)으로 변환하는 거",

            "옵티마이저": "손실 함수에서 최소값을 찾는 함수"
        }
    ]
}
// 입력층에서 다음 층으로 값을 변환시키는 게 활성화 함수(시그모이드,ReLU 등등)이고,
// 변수의 가중치(wight)가 어떤 값을 가질 때 손실을 계산하는 게 손실 함수(제곱 오차, 엔트로피 같은 거)이고,
// 손실 함수에서 최솟값을 찾는 함수(경사하강법)인 것 같아요

// 예를 들어 두 개의 칼럼(두 개의 변수)을 가지는 데이터프레임을 신경망에 넣어서, 손실을 계산하는 그림이 아래이고요,
// 여기서 저 평면에 경사를 내려가면서 최소 손실값을 찾는 게 경사하강법인 것 같아요.
// 정말 저도 잘 모릅니다. ㅠㅠ 혹시 제가 요약한 내용이 이상하거나 하면 이야기 해주시면 정말 감사하겠습니다.